// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sharing.DataAccessCore.Core;

namespace Sharing.DataAccessCore.Migrations
{
    [DbContext(typeof(SharingContext))]
    partial class SharingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sharing.DataAccessCore.Core.ApplicationMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mode")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("ApplicationModes");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.Characteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Accelaration");

                    b.Property<double>("ActionRadius");

                    b.Property<int?>("SizeId");

                    b.Property<double>("Speed");

                    b.Property<double>("Weight");

                    b.Property<DateTime>("WorkTime");

                    b.HasKey("Id");

                    b.HasIndex("SizeId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.Lessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<decimal>("Money");

                    b.HasKey("Id");

                    b.ToTable("Lessors");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(30);

                    b.Property<string>("Continent")
                        .HasMaxLength(30);

                    b.Property<string>("Country")
                        .HasMaxLength(30);

                    b.Property<string>("House")
                        .HasMaxLength(30);

                    b.Property<string>("Street")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacteristicId");

                    b.Property<decimal>("Discount");

                    b.Property<bool>("IsAvailable");

                    b.Property<int?>("LessorId");

                    b.Property<int?>("MachineTypeId");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicId");

                    b.HasIndex("LessorId");

                    b.HasIndex("MachineTypeId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationModeId");

                    b.Property<int?>("MediumActionId");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationModeId");

                    b.HasIndex("MediumActionId");

                    b.ToTable("MachineTypes");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.MediumAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Medium");

                    b.HasKey("Id");

                    b.ToTable("MediumActions");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.Renter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<decimal>("Money");

                    b.HasKey("Id");

                    b.ToTable("Renters");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.RenteredMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivationCode");

                    b.Property<DateTime>("FinishDate");

                    b.Property<int?>("MachineId");

                    b.Property<decimal>("Price");

                    b.Property<int?>("RenterId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("RenterId");

                    b.ToTable("RenteredMachines");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Height");

                    b.Property<double>("Lenght");

                    b.Property<double>("Width");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.Characteristic", b =>
                {
                    b.HasOne("Sharing.DataAccessCore.Core.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.Machine", b =>
                {
                    b.HasOne("Sharing.DataAccessCore.Core.Characteristic", "Characteristic")
                        .WithMany()
                        .HasForeignKey("CharacteristicId");

                    b.HasOne("Sharing.DataAccessCore.Core.Lessor")
                        .WithMany("Machines")
                        .HasForeignKey("LessorId");

                    b.HasOne("Sharing.DataAccessCore.Core.MachineType", "MachineType")
                        .WithMany()
                        .HasForeignKey("MachineTypeId");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.MachineType", b =>
                {
                    b.HasOne("Sharing.DataAccessCore.Core.ApplicationMode", "ApplicationMode")
                        .WithMany()
                        .HasForeignKey("ApplicationModeId");

                    b.HasOne("Sharing.DataAccessCore.Core.MediumAction", "MediumAction")
                        .WithMany()
                        .HasForeignKey("MediumActionId");
                });

            modelBuilder.Entity("Sharing.DataAccessCore.Core.RenteredMachine", b =>
                {
                    b.HasOne("Sharing.DataAccessCore.Core.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId");

                    b.HasOne("Sharing.DataAccessCore.Core.Renter", "Renter")
                        .WithMany("RenteredMachine")
                        .HasForeignKey("RenterId");
                });
#pragma warning restore 612, 618
        }
    }
}
